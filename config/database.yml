# SQLite. Versions 3.8.0 and up are supported.
#   gem install sqlite3
#
#   Ensure the SQLite 3 gem is defined in your Gemfile
#   gem "sqlite3"
#
default: &default
  adapter: postgresql
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  timeout: 5000

development:
  <<: *default
  database: storage/memyselfandi_development

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: storage/memyselfandi_test


# Store production database in the storage/ directory, which by default
# is mounted as a persistent Docker volume in config/deploy.yml.



production:
  primary: &primary_production
    <<: *default
    url: <%= ENV['DATABASE_URL'] %>
  cache:
    <<: *primary_production
    url: <%= URI.parse(ENV['DATABASE_URL']).tap { |u| u.path += '_cache' } if ENV['DATABASE_URL'] %>
    migrations_paths: db/cache_migrate
  queue:
    <<: *primary_production
    url: <%= URI.parse(ENV['DATABASE_URL']).tap { |u| u.path += '_queue' } if ENV['DATABASE_URL'] %>
    migrations_paths: db/queue_migrate
  cable:
    <<: *primary_production
    url: <%= URI.parse(ENV['DATABASE_URL']).tap { |u| u.path += '_cable' } if ENV['DATABASE_URL'] %>
    migrations_paths: db/cable_migrate



#production:
#  primary:
#    <<: *default
#    database: storage/memyselfandi_production
#  cache:
#    <<: *default
#    database: storage/memyselfandi_production_cache
#    migrations_paths: db/cache_migrate
#  queue:
#    <<: *default
#    database: storage/memyselfandi_production_queue
#    migrations_paths: db/queue_migrate
#  cable:
#    <<: *default
#    database: storage/memyselfandi_production_cable
#    migrations_paths: db/cable_migrate
